export interface IncludeInterface {
    url: string;
    model: string;
    method: string;
    timeout?: number;
    default?: string;
    query?: any;
    headers?: any;
    body?: any;
    params?: string[];
    sessions?: any;
    selects?: string[];
    excludes?: string[];
    on?: string;
    duplicate?: boolean;
    delimiter?: string;
    foreign?: string;
    local?: string;
    frame?: string;
    select?: string;
    whole?: boolean;
    each?: boolean;
    pagination?: boolean;
    includes?: IncludeInterface[];
    branches?: IncludeInterface[];
    buildQuery?: (data: any) => any;
    buildBody?: (data: any) => any;
    buildHeaders?: (data: any) => any;
    onSuccess?: (err: any, client: any, data: any) => void;
    onDone?: (err: any, data: any) => void;
}
export declare class Include implements IncludeInterface {
    url: string;
    model: string;
    method: string;
    timeout?: number;
    default?: string;
    headers?: any;
    query?: any;
    body?: any;
    params?: string[];
    sessions?: any;
    selects?: string[];
    excludes?: string[];
    on?: string;
    duplicate?: boolean;
    delimiter?: string;
    foreign?: string;
    local?: string;
    frame?: string;
    select?: string;
    whole?: boolean;
    each?: boolean;
    pagination?: boolean;
    includes?: Include[];
    branches?: Include[];
    _headers?: any;
    _query?: any;
    _body?: any;
    buildQuery?: (data: any) => any;
    buildBody?: (data: any) => any;
    buildHeaders?: (data: any) => any;
    onSuccess?: (err: any, client: any, data: any) => void;
    onDone?: (err: any, data: any) => void;
    constructor(data: any);
    static fromJSON(data: any): Include;
    isShouldHaveFrame(data: any): boolean;
}
//# sourceMappingURL=Include.d.ts.map